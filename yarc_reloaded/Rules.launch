# -*-makefile-*-


BPE=/fun/jaguar/BigPEmu/BigPEmu.exe
JAGGD=jaggd.exe
VJ=/fun/jaguar/virtualjaguar_2.1.3/virtualjaguar.exe
MACOS=@prlexec --vm "Windows 11" -r

ifeq ($(findstring aarch64,$(MACHTYPE)),aarch64)
override BPE:=$(MACOS) $(BPE)
override JAGGD:=jaggd
override VJ:=$(MACOS) $(VJ)
endif

export BIOS=1
#
# SKUNK
#
.PHONY: reset
reset:
	jcp -r
	wait

.PHONY: flash
flash: $(DEMO).j64
	jcp -ef $<

.PHONY: upload
.ONESHELL:
upload: $(DEMO).cof
	@jcp -q $< 0x4000

#
# JagGD
#
.PHONY: jaggd_reset
jaggd_reset:
	$(JAGGD) -r

.PHONY: jaggd
jaggd:  $(DEMO).j64
	$(JAGGD) -rd -uxr $<,a:0x800000

.PHONY: jaggd_cof
jaggd_cof: $(DEMO).cof
	$(JAGGD) -rd -ux $<,a:0x4000,x:0x4000

#
# VirtualJaguar
#

.PHONY: vjd_cof
vjd_cof: $(DEMO).cof
	$(VJ) -D $<

.PHONY: vj_cof
vj_cof: $(DEMO).cof
	$(VJ) $< &

.PHONY: vj
vjd: vj.j64
ifeq ($(BIOS),1)
	$(VJ) -D -b $< &
else
	$(VJ) -D  $< &
endif

.PHONY: vj
vj: vj.j64
ifeq ($(BIOS),1)
	$(VJ) -b $< &
else
	$(VJ) $< &
endif

#
# BigPEmu
#
.PHONY: bpe_cof
bpe_cof: $(DEMO).cof
	$(BPE) $< -devmode &
	true

.PHONY: bpe
bpe: $(DEMO).j64
	$(BPE) $< -devmode &
	true
